#! /usr/bin/fish

# https://modding-openmw.com/lists/expanded-vanilla/

set modbin $HOME/doc/mor/bin
set modpath $HOME/doc/mor/mods
set modlist (cat $modpath/.modlist)

if test -z "$argv"
	exec openmw
end

function usage
	echo "Usage:"
	echo (basename (status -f)) "--[clean|delta|examine|install|list[|extract|resize]"
	echo "-c/--clean                clean mods needing cleaning"
	echo "-d/--delta                creates delta and omwllf plugins"
	echo "-e/--examine directory    examine the content of directory"
	echo "-i/--install         		install openmw.cfg based on modlist"
	echo "-l/--list					set modlist"
	echo "-x/--extract directory    extract archive in directory"
    echo "-r/--resize               resize meshes"
	echo "-h/--help					show this usage"
	exit
end




argparse "c/clean"  "d/delta" "e/examine" "i/install" "l/list" \
	"x/extract" "r/resize" "h/help" -- $argv
or usage


if test -n "$_flag_help"
	usage
end



function list_mod
	set dir (echo $argv[1] | sed -e "s/.*\///")
	begin
		set date (date +%Y%m%d)
		echo "### $argv[1] ($date)"
		# we don't need tamriel data bsa files anymore.
		#find $argv[1] -iname '*.bsa' \
		#	| sed -e "s/^/fallback-archive=/g"
		find $argv[1] -iname '*.esp' \
			-o -iname '*.esm' \
			-o -iname 'meshes' \
			-o -iname 'textures' \
			-o -iname 'music' \
			-o -iname 'animations' \
			-o -iname 'sound' \
			-o -iname 'shaders' \
			-o -iname 'splash' \
			-o -iname 'fonts' \
			-o -iname '*.omwaddon' \
			-o -iname '*.omwscripts' \
			| sed -e 's,^,#data=",g; s,/[^/]*$,",g'
		find $argv[1] -iname '*.esp' \
			-o -iname '*.esm' \
			-o -iname '*.omwaddon' \
			-o -iname '*.omwscripts' \
			| sed -e "s,^,#content=,"
	end | uniq | sort -t "=" -k 2 | sed -e "s,$argv[1],$dir,g"
end	



if test -n "$_flag_extract"	
	if test -e $modpath/$argv[1]/$modlist.cfg
		echo "$argv/$modlist.cfg exists. Aborting."
		exit
	end
	echo extracting in $modpath/$argv[1]
	if test ! -d $modpath/$argv[1]
		mkdir -p $modpath/$argv[1]
	end
	set here (pwd)
	cd $modpath/$argv[1]
	mv (lsl ~/dld) ./
	find ./ -maxdepth 1 -name '*.7z' -exec 7z x '{}' \;
	find ./ -maxdepth 1 -name '*.zip' -exec unzip '{}' \;
	find ./ -maxdepth 1 -name '*.rar' -exec unrar x '{}' \;
	find ./ -maxdepth 1 -name '*.tar.gz' -exec tar -xzf '{}' \;
	cd "$here"
	list_mod $modpath/$argv[1] > $modpath/$argv[1]/$modlist.cfg
	vim $modpath/$argv[1]/$modlist.cfg
	echo $argv[1] >> $modpath/$modlist.cfg
end

if test -n "$_flag_examine"
	if test ! -e $modpath/$argv[1]/$modlist.cfg
		list_mod $argv[1] > $modpath/$argv[1]/$modlist.cfg
	end
	if not grep -q $argv[1] $modlist.cfg
		echo $argv[1] >> $modpath/$modlist.cfg
	end
	vim $argv/$modlist.cfg
	vim $modlist.cfg
end

if test -n "$_flag_install"
	if test ! -d $HOME/.config/openmw-$modlist
		echo "$HOME/.config/openmw-$modlist does not exist. Aborting."
		exit
	end
	echo "Replacing $HOME/.config/openmw-$modlist/openmw.cfg"
	begin
		sed -e '/^#/d; /^$/d' $modpath/$modlist.cfg | while read -l dir
			if test -e $modpath/$dir/openmw.cfg
				cat $modpath/$dir/openmw.cfg
			end
		end
		sed -e '/^#/d; /^$/d' $modpath/$modlist.cfg | while read -l dir
			if test -e $modpath/$dir/$modlist.cfg
				echo -e "\n### $dir"
				sed -e "/^#/d; /fallback-archive=/d;
					s,^data=\",data=\"$modpath/,;
					s,content=.*/\([^/]*\),content=\1,;
					s,groundcover=.*/\([^/]*\),groundcover=\1," \
					$modpath/$dir/$modlist.cfg
			end
		end
	end > $HOME/.config/openmw-$modlist/openmw.cfg
end


if test -n "$_flag_clean"
	set here (pwd)
	cd $HOME/doc/mor/en/app/
	$modbin/tes3cmd clean $modpath/$argv[1]
	cd $here
end	

if test -n "$_flag_delta"
	if test ! -d $modpath/DeltaPlugin
		mkdir $modpath/DeltaPlugin
	end
	if test -e $modpath/DeltaPlugin/delta-$modlist.omwaddon
		rm $modpath/DeltaPlugin/delta-$modlist.omwaddon
	end
	set -x RAYON_NUM_THREADS 1
	nice $modbin/delta_plugin -v -v merge --skip-cells $modpath/DeltaPlugin/delta-$modlist.omwaddon
	set -u RAYON_NUM_THREADS
	if test ! -e $modpath/DeltaPlugin/$modlist.cfg
		list_mod $argv[1] > $modpath/DeltaPlugin/$modlist.cfg
		echo DeltaPlugin >> $modpath/$modlist.cfg
	end	
	echo "Created $modpath/DeltaPlugin/delta-$modlist.omwaddon"

	#echo "Creating delta/omwllf.omwaddon"
	#rm -f delta/omwllf.omwaddon
	#nice ../scripts/omwllf/omwllf.py -d $modpath/delta -m $modlist-omwllf.omwaddon
end

if test -n "$_flag_light"
	if test ! -d $modpath/DeltaPlugin
		mkdir $modpath/DeltaPlugin
	end
	if test -e $modpath/DeltaPlugin/LightFixes-$modlist.esp
		rm  $modpath/DeltaPlugin/LightFixes-$modlist.esp
	end
	set OLDPATH $PATH
	set -x PATH /home/pj/perl5/bin $PATH 2>/dev/null;
	set -q PERL5LIB; and set -x PERL5LIB /home/pj/perl5/lib/perl5:$PERL5LIB;
	set -q PERL5LIB; or set -x PERL5LIB /home/pj/perl5/lib/perl5;
	set -q PERL_LOCAL_LIB_ROOT; and set -x PERL_LOCAL_LIB_ROOT /home/pj/perl5:$PERL_LOCAL_LIB_ROOT;
	set -q PERL_LOCAL_LIB_ROOT; or set -x PERL_LOCAL_LIB_ROOT /home/pj/perl5;
	set -x PERL_MB_OPT --install_base\ \"/home/pj/perl5\";
	set -x PERL_MM_OPT INSTALL_BASE=/home/pj/perl5;

	$modbin/waza_lightfixes.pl
	mv LightFixes.esp $modpath/DeltaPlugin/LightFixes-$modlist.esp

	set -x PATH $OLDPATH 2>/dev/null
	set -u PERL5LIB
	set -u PERL_LOACAL_LIB_ROOT
	set -u PERL_MB-OPT
	set -u PERL_MM_OPT
end



if test -n "$_flag_list"
	if test ! -n "$argv[1]"
		echo modlist: $modlist
		exit
	end
	echo modlist: $argv[1]
	echo $argv[1] > $modpath/.modlist
	if test -e $modpath/$argv[1].cfg
		if not test -e $HOME/.config/openmw-$argv[1]
			mkdir -p $HOME/.config/openmw-$argv[1]
		end
		if not test -e $HOME/.local/share/openmw-$argv[1]
			mkdir -p $HOME/.local/share/openmw-$argv[1]
		end
		rm $HOME/.config/openmw
		ln -s $HOME/.config/openmw-$argv[1] $HOME/.config/openmw
		ls -l $HOME/.config/openmw
		rm $HOME/.local/share/openmw
		ln -s $HOME/.local/share/openmw-$argv[1] $HOME/.local/share/openmw
		ls -l $HOME/.local/share/openmw
	else
		echo "Possible choices  are:"
		ls $modpath/*.cfg
	end
end


if test -n "$_flag_resize"
	# find $argv[1] -type d -exec mkdir lowdef/'{}' \;
	set -l percent 50%
	if test -e .resized
		cat .resized
		exit
	else
		# use `gm` or `magick`
		magick mogrify -verbose -filter Mitchell -resize $percent *.dds
		#magick mogrify -verbose -filter Mitchell -resize $percent -path lowdef *.dds
		set date (date '+%Y%m%d %H:%M:%S')
		echo "Resized by $percent on $date." > .resized
	end
end
