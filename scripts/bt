#! /usr/bin/fish

function usage
	set_color --bold
	echo "Usage:" (set_color normal)\
	(basename (status -f)) " [-a <device> <device_mac>] [-c <device>] [-d <device>] [-h] [-l]"
	echo "    -a/--add <device> <device_mac>  record <device> with <device_mac> address."
	echo "    -c/--connect <device>           connect to <device>"
	echo "    -d/--disconnect <device>        disconnect from <device>"
	echo "    -h/--help                       show this help"
	echo "    -l/--list                       list known devices"
end

if test (count $argv) -eq 0
	usage
	exit 1
end

argparse "a/add=" "c/connect=" "d/disconnect=" "h/help" "l/list" -- $argv
or begin
	usage
	exit 1
end

if test -n "$_flag_help"
	usage
	exit
end

# set config file
if test -n "$XDG_CONFIG_HOME"
	set config_dir $XDG_CONFIG_HOME/(basename (status -f))
else
	set config_dir $HOME/.config/(basename (status -f))
end

if not test -e $config_dir
	mkdir -p $config_dir
end

set config_file $config_dir/devices

# global variable containing mac address of a device
set device_mac

function get --argument-names device
	set device_mac (grep "$device" $config_file | cut -d " " -f 2)
	if test -z "$device_mac"
		echo "Unknown device $device. Aborting."
		exit 1
	end		
end

if test -n "$_flag_add"
	# add a new device
	if grep -q "$_flag_add" $config_file
		echo "Device $_flag_add exists yet. Not adding."
		exit 1
	else
		echo -e "$_flag_add $argv[1]"  >> $config_file
	end
	exit
end


		
if test -n "$_flag_list"
	# print list of devices
	cat $config_file
	exit
end

if test -n "$_flag_connect"
	get $_flag_connect
	bluetoothctl -- power on
	bluetoothctl -- pair $device_mac
	bluetoothctl -- connect $device_mac
	exit
end

if test -n "$_flag_disconnect"
	get $_flag_disconnect
	bluetoothctl -- disconnect $device_mac
	bluetoothctl -- power off
	exit
end

